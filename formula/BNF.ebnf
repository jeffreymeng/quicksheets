# https://en.wikipedia.org/wiki/Backus%E2%80%93Naur_form
# https://ruslanspivak.com/lsbasi-part4/
# https://stackoverflow.com/questions/17162919/unambiguous-grammar-for-exponentiation-operation
letter         ::=   "A" | "B" | "C" | "D" | "E" | "F" | "G"
                   | "H" | "I" | "J" | "K" | "L" | "M" | "N"
                   | "O" | "P" | "Q" | "R" | "S" | "T" | "U"
                   | "V" | "W" | "X" | "Y" | "Z" | "a" | "b"
                   | "c" | "d" | "e" | "f" | "g" | "h" | "i"
                   | "j" | "k" | "l" | "m" | "n" | "o" | "p"
                   | "q" | "r" | "s" | "t" | "u" | "v" | "w"
                   | "x" | "y" | "z" ;
number          ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ;
expression      ::= term | term "+" expression | term "-" expression ;
term            ::= factor | factor "*" term | factor "/" term ;
factor          ::= base | base "^" exponent ;
function_name   ::= letter | letter function_name
function_arg    ::= range | expression
function        ::= function_name "(" [ { function_arg "," } function_arg ] ")"

base            ::= "(" expression ")" | number | function | reference | "+" base | "-" base ;
exponent        ::= base ;